// Agent Code

#require "Dweetio.class.nut:1.0.0"

// HTML output
local baseTop = @"<!DOCTYPE html>
<html>
<head>
<title>Weather Monitor</title>
<meta http-equiv='refresh' content='10'>
<style>
h2 { font-family:Verdana;color:#0000FF; }
p { font-family:Verdana;padding-bottom:20px; }
b { color:#0000FF; }
</style>
</head>
<body background='http://www.hybridcars.com/wp-content/uploads/2014/08/renovo-coupe_upper.jpg'>
<table style='width:100%;border:0px;' cellpadding='20'><tr><td align='center'>
<h2 align='center'>Weather Monitor</h2>
<table style='width:40%;border:4px solid #0000FF;border-collapse:separate;' cellpadding='20'><tr><td valign='top'>"	
	
local baseBottom = @"</td></tr></table></td></tr></table></body>
</html>";

local html = null;

local client = DweetIO();

local lastReading = {};
lastReading.pressure <- 0;
lastReading.temp <- 0;
lastReading.day <- true;
lastReading.humid <- 0;

// Add a function to post data from the device to the stream

function manageReading(reading) {
    // Reading is the data passed from the device, ie.
    // a Squirrel table with the key 'temp'
    server.log("PostReading called");
    client.dweet("kiran", reading, null);
    
    server.log("dweet sent");
    
    // HTML strings
    local tempString = "<p><b>Temperature&#58; &nbsp; " + format("%.2f", reading.temp) + " &deg;C &#47; " + format("%.2f", reading.temp*1.8 + 32) + " &deg;F</b></p>";
    local humidString = "<p><b>Humidity&#58; &nbsp; " + format("%.2f", reading.humid) + "%</b></p>";
    local pressString = "<p><b>Pressure&#58; &nbsp; " + format("%.2f", reading.pressure) + " hPa and ";
    
    local diff = reading.pressure - lastReading.pressure;
    
    if (diff > 0) {
        pressString = pressString + "rising</b></p>"
    } else {
        pressString = pressString + "falling</b></p>";
    }
    
    html = baseTop + tempString + humidString + pressString + baseBottom;
    lastReading = reading;
    
    server.log("readings posted");
}

function webServer(request, response) {
    // Loading the HTML page with the weather data
    try {
        if (html == null) manageReading(lastReading);
        response.send(200, html);
    } catch (err) {
        response.send(500, "Agent Error: " + err);
    }        
}

// Registering the function to handle requests from a web browser
http.onrequest(webServer);

// Registering the function to handle data messages from the device
device.on("reading", manageReading);